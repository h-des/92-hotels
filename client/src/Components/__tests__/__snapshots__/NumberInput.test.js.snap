// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test NumberInput Renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NumberInput
    currentValue={10}
    fieldName="test"
    onMinusClick={[MockFunction]}
    onPlusClick={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <styled.button
          onClick={[Function]}
        >
          -
        </styled.button>,
        <styled.input
          id="test"
          min={0}
          name="test"
          value={10}
        />,
        <styled.button
          onClick={[Function]}
        >
          +
        </styled.button>,
      ],
      "marginBottom": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "-",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "-",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "id": "test",
          "min": 0,
          "name": "test",
          "onChange": undefined,
          "value": 10,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": "+",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "+",
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <styled.button
            onClick={[Function]}
          >
            -
          </styled.button>,
          <styled.input
            id="test"
            min={0}
            name="test"
            value={10}
          />,
          <styled.button
            onClick={[Function]}
          >
            +
          </styled.button>,
        ],
        "marginBottom": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "-",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "-",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "test",
            "min": 0,
            "name": "test",
            "onChange": undefined,
            "value": 10,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "+",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "+",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
